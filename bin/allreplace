#!/usr/bin/env python3
# this script replaces regexes recursively in all the subdirs
import os
import sys
import re
from termcolor import cprint
import argparse

####################################################
# Argument parsing and default values
####################################################

def safeopen(fpath):
    try:
        f = open(fpath, errors = 'ignore')
    except IOError:
        return(0)
    return(f)



# argument parsing
argumentparser = argparse.ArgumentParser(description="replace regexes in all subdirectories (dry run by default)")
argumentparser.add_argument("-v","--verbose", help="verbose output", action="store_true")
argumentparser.add_argument("--forreal", help='do it for real, not only a dry run',action="store_true")
argumentparser.add_argument("-e","--extension", help='only this extension (no dot)')
argumentparser.add_argument("-p","--pattern", help="pattern to be replaced", required = True)
arg=argumentparser.parse_args()

if arg.extension:
    if arg.extension[0]!='.':
        arg.extension = '.'+arg.extension

if arg.verbose:
    print("pattern: "+arg.pattern)
    if arg.extension:
        print ("Extension: "+arg.extension)
    if arg.forreal:
        print ("... and doing it for real!")
    else:
        print ("... but only a dry run.")

regex = re.compile("{0}".format(arg.pattern))

topdir="./"
for dname, dirs, files in os.walk(topdir):
    for fname in files:
        fpath = os.path.join(dname, fname)
        allgood = True
        if arg.extension:
            extension = os.path.splitext(fpath)[1]
            if extension != arg.extension:
                allgood = False
        f=safeopen(fpath)
        if f == 0:
            allgood = False

        if allgood:
            firstline = f.readline()
            mtch = re.search(regex,firstline)
            if mtch:
                if arg.verbose:
                    cprint(fpath,'green')
                    print(firstline, end='')
